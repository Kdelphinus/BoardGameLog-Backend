image: python:3.12-slim  # 더 가벼운 이미지 사용

variables:
  REDIS_HOST: redis
  REDIS_PORT: 6379
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip-cache"
  PYTHONUNBUFFERED: "1"

# 캐시 최적화
cache:
  key: ${CI_COMMIT_REF_SLUG}  # 브랜치별 캐시 설정
  paths:
    - .pip-cache/
    - .venv/
  policy: pull-push  # 첫 작업에서만 캐시 업데이트

stages:
  - test

test:
  stage: test
  services:
    - name: redis:7-alpine  # 더 가벼운 Redis 이미지
      alias: redis
      command: ["redis-server", "--bind", "0.0.0.0"]
  before_script:
    # 필수 패키지만 설치
    - python -m venv .venv
    - source .venv/bin/activate || . .venv/bin/activate
    - pip install --upgrade pip
    # 필요한 패키지만 설치하도록 최적화
    - if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; else pip install -r requirements.txt; fi
    - if [ -f .env.test ]; then cp .env.test .env; else echo "Creating default .env file"; echo "REDIS_HOST=redis" >> .env; echo "REDIS_PORT=6379" >> .env; fi
  script:
    - source .venv/bin/activate || . .venv/bin/activate
    # 병렬 테스트 실행 (더 빠른 실행)
    - python -m pytest -v -xvs
  only:
    - main
    - develop
    - merge_requests
  # 필요한 것만 아티팩트로 저장
  artifacts:
    when: on_failure  # 실패 시에만 저장하여 시간 절약
    paths:
      - pytest.log
    expire_in: 1 day  # 보존 기간 축소