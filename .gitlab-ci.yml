image: python:3.12-slim

variables:
  REDIS_HOST: redis
  REDIS_PORT: 6379
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip-cache"
  PYTHONUNBUFFERED: "1"
  FF_USE_FASTZIP: "true"  # 더 빠른 zip 사용
  ARTIFACT_COMPRESSION_LEVEL: "fast"  # 빠른 압축 사용

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .pip-cache/
    - .venv/
  policy: pull  # 캐시 읽기만 하도록 변경

stages:
  - test

test:
  stage: test
  services:
    - name: redis:7-alpine
      alias: redis
      command: ["redis-server", "--bind", "0.0.0.0"]
  before_script:
    # 캐시된 venv가 있는지 확인
    - if [ ! -d ".venv" ]; then python -m venv .venv; fi
    - source .venv/bin/activate || . .venv/bin/activate
    # requirements.txt가 변경된 경우에만 패키지 설치
    - if [ -f requirements-test.txt ]; then 
        pip install --no-cache-dir -r requirements-test.txt; 
      elif [ -f requirements.txt ]; then 
        pip install --no-cache-dir -r requirements.txt; 
      fi
    - if [ -f .env.test ]; then cp .env.test .env; else echo "REDIS_HOST=redis" > .env && echo "REDIS_PORT=6379" >> .env; fi
  script:
    - source .venv/bin/activate || . .venv/bin/activate
    - python -m pytest -v -xvs --no-header --no-summary  # 테스트 출력 감소
  only:
    - main
    - develop
    - merge_requests
  artifacts:
    when: on_failure
    paths:
      - pytest.log
    expire_in: 1 hour  # 보존 기간 더 축소